{"ast":null,"code":"var _jsxFileName = \"/home/vishal/Vishal/Projects/src/github.com/crmapp/frontend/src/pages/customers/Customers.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, IconButton, Tooltip, Button, Chip } from '@mui/material';\nimport { Edit as EditIcon, Delete as DeleteIcon, Add as AddIcon, Phone as PhoneIcon, Email as EmailIcon } from '@mui/icons-material';\nimport CustomerForm from '../../components/customers/CustomerForm';\nimport Notification from '../../components/common/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Customers = () => {\n  _s();\n  const [customers, setCustomers] = useState([{\n    id: 1,\n    name: 'John Doe',\n    email: 'john@example.com',\n    phone: '123-456-7890',\n    company: 'Tech Corp',\n    status: 'active'\n  }, {\n    id: 2,\n    name: 'Jane Smith',\n    email: 'jane@example.com',\n    phone: '098-765-4321',\n    company: 'Design Co',\n    status: 'inactive'\n  }]);\n  const [openForm, setOpenForm] = useState(false);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const showNotification = (message, severity = 'success') => {\n    setNotification({\n      open: true,\n      message,\n      severity\n    });\n  };\n  const handleCloseNotification = () => {\n    setNotification(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  const handleAddCustomer = formData => {\n    try {\n      const newCustomer = {\n        ...formData,\n        id: customers.length + 1\n      };\n      setCustomers([...customers, newCustomer]);\n      setOpenForm(false);\n      showNotification('Customer added successfully');\n    } catch (error) {\n      showNotification('Error adding customer', 'error');\n    }\n  };\n  const handleEditCustomer = formData => {\n    try {\n      setCustomers(customers.map(customer => customer.id === selectedCustomer.id ? {\n        ...formData,\n        id: customer.id\n      } : customer));\n      setSelectedCustomer(null);\n      setOpenForm(false);\n      showNotification('Customer updated successfully');\n    } catch (error) {\n      showNotification('Error updating customer', 'error');\n    }\n  };\n  const handleDelete = customerId => {\n    if (window.confirm('Are you sure you want to delete this customer?')) {\n      try {\n        setCustomers(customers.filter(customer => customer.id !== customerId));\n        showNotification('Customer deleted successfully');\n      } catch (error) {\n        showNotification('Error deleting customer', 'error');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Customer Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 22\n        }, this),\n        onClick: () => setOpenForm(true),\n        children: \"Add Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: customers.map(customer => {\n            var _customer$value;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: customer.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: customer.phone,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      sx: {\n                        color: 'primary.main'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(PhoneIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 137,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: customer.email,\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      sx: {\n                        color: 'primary.main'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(EmailIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: customer.company\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: customer.status,\n                  color: customer.status === 'active' ? 'success' : 'default',\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [\"$\", (_customer$value = customer.value) === null || _customer$value === void 0 ? void 0 : _customer$value.toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Edit\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => {\n                      setSelectedCustomer(customer);\n                      setOpenForm(true);\n                    },\n                    size: \"small\",\n                    sx: {\n                      color: 'primary.main',\n                      mr: 1\n                    },\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Delete\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleDelete(customer.id),\n                    size: \"small\",\n                    sx: {\n                      color: 'error.main'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, customer.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomerForm, {\n      open: openForm,\n      onClose: () => {\n        setOpenForm(false);\n        setSelectedCustomer(null);\n      },\n      onSubmit: selectedCustomer ? handleEditCustomer : handleAddCustomer,\n      initialData: selectedCustomer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      open: notification.open,\n      message: notification.message,\n      severity: notification.severity,\n      onClose: handleCloseNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Customers, \"QNv7UBP6WovRGlMWJpjBDLZ6qmY=\");\n_c = Customers;\nexport default Customers;\n// import React, { useState, useEffect } from 'react';// import {\n// //   Box,\n// //   Paper,\n// //   Table,\n// //   TableBody,\n// //   TableCell,\n// //   TableContainer,\n// //   TableHead,\n// //   TableRow,\n// //   Typography,\n// //   IconButton,\n// //   Tooltip,\n// //   Button,\n// //   Chip\n// // } from '@mui/material';\n// // import {\n// //   Edit as EditIcon,\n// //   Delete as DeleteIcon,\n// //   Add as AddIcon,\n// //   Phone as PhoneIcon,\n// //   Email as EmailIcon\n// // } from '@mui/icons-material';\n// import CustomerForm from '../../components/customers/CustomerForm';\n// import Notification from '../../components/common/Notification';\n\n// const Customers = () => {\n//   const [customers, setCustomers] = useState([ {\n//     id: 1,\n//     name: 'John Doe',\n//     email: 'john@example.com',\n//     phone: '123-456-7890',\n//     company: 'Tech Corp',\n//     status: 'active',\n//     value: 50000\n//   },\n//   {\n//     id: 2,\n//     name: 'Jane Smith',\n//     email: 'jane@example.com',\n//     phone: '098-765-4321',\n//     company: 'Design Co',\n//     status: 'inactive',\n//     value: 25000\n//   }]);\n//   const [loading, setLoading] = useState(true);\n//   const [openForm, setOpenForm] = useState(false);\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\n//   const [notification, setNotification] = useState({\n//     open: false,\n//     message: '',\n//     severity: 'success'\n//   });\n\n//   useEffect(() => {\n//     fetchCustomers();\n//   }, []);\n\n//   const fetchCustomers = async () => {\n//     try {\n//       setLoading(true);\n//       const response = await customerService.getCustomers();\n//       setCustomers(response);\n//     } catch (error) {\n//       showNotification('Error fetching customers', 'error');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const showNotification = (message, severity = 'success') => {\n//     setNotification({\n//       open: true,\n//       message,\n//       severity\n//     });\n//   };\n\n//   const handleCloseNotification = () => {\n//     setNotification(prev => ({ ...prev, open: false }));\n//   };\n\n//   const handleAddCustomer = async (formData) => {\n//     try {\n//       const response = await customerService.createCustomer(formData);\n//       setCustomers([...customers, response]);\n//       setOpenForm(false);\n//       showNotification('Customer added successfully');\n//     } catch (error) {\n//       showNotification(error.message || 'Error adding customer', 'error');\n//     }\n//   };\n\n//   const handleEditCustomer = async (formData) => {\n//     try {\n//       const response = await customerService.updateCustomer(selectedCustomer.id, formData);\n//       setCustomers(customers.map(customer => \n//         customer.id === selectedCustomer.id ? response : customer\n//       ));\n//       setSelectedCustomer(null);\n//       setOpenForm(false);\n//       showNotification('Customer updated successfully');\n//     } catch (error) {\n//       showNotification(error.message || 'Error updating customer', 'error');\n//     }\n//   };\n\n//   const handleDelete = async (customerId) => {\n//     if (window.confirm('Are you sure you want to delete this customer?')) {\n//       try {\n//         await customerService.deleteCustomer(customerId);\n//         setCustomers(customers.filter(customer => customer.id !== customerId));\n//         showNotification('Customer deleted successfully');\n//       } catch (error) {\n//         showNotification(error.message || 'Error deleting customer', 'error');\n//       }\n//     }\n//   };\n\n//   if (loading) {\n//     return (\n//       <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n//         <CircularProgress />\n//       </Box>\n//     );\n//   }\n\n//   return (\n//     <Box sx={{ p: 3 }}>\n//       {/* ... existing JSX code ... */}\n\n//       <CustomerForm\n//         open={openForm}\n//         onClose={() => {\n//           setOpenForm(false);\n//           setSelectedCustomer(null);\n//         }}\n//         onSubmit={selectedCustomer ? handleEditCustomer : handleAddCustomer}\n//         initialData={selectedCustomer}\n//       />\n\n//       <Notification\n//         open={notification.open}\n//         message={notification.message}\n//         severity={notification.severity}\n//         onClose={handleCloseNotification}\n//       />\n//     </Box>\n//   );\n// };\n\n// export default Customers;\nvar _c;\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"names":["React","useState","Box","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","IconButton","Tooltip","Button","Chip","Edit","EditIcon","Delete","DeleteIcon","Add","AddIcon","Phone","PhoneIcon","Email","EmailIcon","CustomerForm","Notification","jsxDEV","_jsxDEV","Customers","_s","customers","setCustomers","id","name","email","phone","company","status","openForm","setOpenForm","selectedCustomer","setSelectedCustomer","notification","setNotification","open","message","severity","showNotification","handleCloseNotification","prev","handleAddCustomer","formData","newCustomer","length","error","handleEditCustomer","map","customer","handleDelete","customerId","window","confirm","filter","sx","p","children","display","justifyContent","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","startIcon","onClick","component","align","_customer$value","alignItems","gap","title","size","color","fontSize","label","value","toLocaleString","mr","onClose","onSubmit","initialData","_c","$RefreshReg$"],"sources":["/home/vishal/Vishal/Projects/src/github.com/crmapp/frontend/src/pages/customers/Customers.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  IconButton,\n  Tooltip,\n  Button,\n  Chip\n} from '@mui/material';\nimport {\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Add as AddIcon,\n  Phone as PhoneIcon,\n  Email as EmailIcon\n} from '@mui/icons-material';\nimport CustomerForm from '../../components/customers/CustomerForm';\nimport Notification from '../../components/common/Notification';\n\nconst Customers = () => {\n  const [customers, setCustomers] = useState([\n    {\n      id: 1,\n      name: 'John Doe',\n      email: 'john@example.com',\n      phone: '123-456-7890',\n      company: 'Tech Corp',\n      status: 'active',\n    },\n    {\n      id: 2,\n      name: 'Jane Smith',\n      email: 'jane@example.com',\n      phone: '098-765-4321',\n      company: 'Design Co',\n      status: 'inactive',\n    }\n  ]);\n  const [openForm, setOpenForm] = useState(false);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  const showNotification = (message, severity = 'success') => {\n    setNotification({\n      open: true,\n      message,\n      severity\n    });\n  };\n\n  const handleCloseNotification = () => {\n    setNotification(prev => ({ ...prev, open: false }));\n  };\n\n  const handleAddCustomer = (formData) => {\n    try {\n      const newCustomer = {\n        ...formData,\n        id: customers.length + 1\n      };\n      setCustomers([...customers, newCustomer]);\n      setOpenForm(false);\n      showNotification('Customer added successfully');\n    } catch (error) {\n      showNotification('Error adding customer', 'error');\n    }\n  };\n\n  const handleEditCustomer = (formData) => {\n    try {\n      setCustomers(customers.map(customer => \n        customer.id === selectedCustomer.id ? { ...formData, id: customer.id } : customer\n      ));\n      setSelectedCustomer(null);\n      setOpenForm(false);\n      showNotification('Customer updated successfully');\n    } catch (error) {\n      showNotification('Error updating customer', 'error');\n    }\n  };\n\n  const handleDelete = (customerId) => {\n    if (window.confirm('Are you sure you want to delete this customer?')) {\n      try {\n        setCustomers(customers.filter(customer => customer.id !== customerId));\n        showNotification('Customer deleted successfully');\n      } catch (error) {\n        showNotification('Error deleting customer', 'error');\n      }\n    }\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\n        <Typography variant=\"h4\">Customer Management</Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={() => setOpenForm(true)}\n        >\n          Add Customer\n        </Button>\n      </Box>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Contact</TableCell>\n              <TableCell>Company</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Value</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {customers.map((customer) => (\n              <TableRow key={customer.id}>\n                <TableCell>{customer.name}</TableCell>\n                <TableCell>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                    <Tooltip title={customer.phone}>\n                      <IconButton size=\"small\" sx={{ color: 'primary.main' }}>\n                        <PhoneIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title={customer.email}>\n                      <IconButton size=\"small\" sx={{ color: 'primary.main' }}>\n                        <EmailIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                  </Box>\n                </TableCell>\n                <TableCell>{customer.company}</TableCell>\n                <TableCell>\n                  <Chip \n                    label={customer.status}\n                    color={customer.status === 'active' ? 'success' : 'default'}\n                    size=\"small\"\n                  />\n                </TableCell>\n                <TableCell>${customer.value?.toLocaleString()}</TableCell>\n                <TableCell align=\"right\">\n                  <Tooltip title=\"Edit\">\n                    <IconButton \n                      onClick={() => {\n                        setSelectedCustomer(customer);\n                        setOpenForm(true);\n                      }}\n                      size=\"small\"\n                      sx={{ color: 'primary.main', mr: 1 }}\n                    >\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <Tooltip title=\"Delete\">\n                    <IconButton \n                      onClick={() => handleDelete(customer.id)}\n                      size=\"small\"\n                      sx={{ color: 'error.main' }}\n                    >\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <CustomerForm\n        open={openForm}\n        onClose={() => {\n          setOpenForm(false);\n          setSelectedCustomer(null);\n        }}\n        onSubmit={selectedCustomer ? handleEditCustomer : handleAddCustomer}\n        initialData={selectedCustomer}\n      />\n\n      <Notification\n        open={notification.open}\n        message={notification.message}\n        severity={notification.severity}\n        onClose={handleCloseNotification}\n      />\n    </Box>\n  );\n};\nexport default Customers;\n// import React, { useState, useEffect } from 'react';// import {\n// //   Box,\n// //   Paper,\n// //   Table,\n// //   TableBody,\n// //   TableCell,\n// //   TableContainer,\n// //   TableHead,\n// //   TableRow,\n// //   Typography,\n// //   IconButton,\n// //   Tooltip,\n// //   Button,\n// //   Chip\n// // } from '@mui/material';\n// // import {\n// //   Edit as EditIcon,\n// //   Delete as DeleteIcon,\n// //   Add as AddIcon,\n// //   Phone as PhoneIcon,\n// //   Email as EmailIcon\n// // } from '@mui/icons-material';\n// import CustomerForm from '../../components/customers/CustomerForm';\n// import Notification from '../../components/common/Notification';\n\n// const Customers = () => {\n//   const [customers, setCustomers] = useState([ {\n//     id: 1,\n//     name: 'John Doe',\n//     email: 'john@example.com',\n//     phone: '123-456-7890',\n//     company: 'Tech Corp',\n//     status: 'active',\n//     value: 50000\n//   },\n//   {\n//     id: 2,\n//     name: 'Jane Smith',\n//     email: 'jane@example.com',\n//     phone: '098-765-4321',\n//     company: 'Design Co',\n//     status: 'inactive',\n//     value: 25000\n//   }]);\n//   const [loading, setLoading] = useState(true);\n//   const [openForm, setOpenForm] = useState(false);\n//   const [selectedCustomer, setSelectedCustomer] = useState(null);\n//   const [notification, setNotification] = useState({\n//     open: false,\n//     message: '',\n//     severity: 'success'\n//   });\n\n//   useEffect(() => {\n//     fetchCustomers();\n//   }, []);\n\n//   const fetchCustomers = async () => {\n//     try {\n//       setLoading(true);\n//       const response = await customerService.getCustomers();\n//       setCustomers(response);\n//     } catch (error) {\n//       showNotification('Error fetching customers', 'error');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const showNotification = (message, severity = 'success') => {\n//     setNotification({\n//       open: true,\n//       message,\n//       severity\n//     });\n//   };\n\n//   const handleCloseNotification = () => {\n//     setNotification(prev => ({ ...prev, open: false }));\n//   };\n\n//   const handleAddCustomer = async (formData) => {\n//     try {\n//       const response = await customerService.createCustomer(formData);\n//       setCustomers([...customers, response]);\n//       setOpenForm(false);\n//       showNotification('Customer added successfully');\n//     } catch (error) {\n//       showNotification(error.message || 'Error adding customer', 'error');\n//     }\n//   };\n\n//   const handleEditCustomer = async (formData) => {\n//     try {\n//       const response = await customerService.updateCustomer(selectedCustomer.id, formData);\n//       setCustomers(customers.map(customer => \n//         customer.id === selectedCustomer.id ? response : customer\n//       ));\n//       setSelectedCustomer(null);\n//       setOpenForm(false);\n//       showNotification('Customer updated successfully');\n//     } catch (error) {\n//       showNotification(error.message || 'Error updating customer', 'error');\n//     }\n//   };\n\n//   const handleDelete = async (customerId) => {\n//     if (window.confirm('Are you sure you want to delete this customer?')) {\n//       try {\n//         await customerService.deleteCustomer(customerId);\n//         setCustomers(customers.filter(customer => customer.id !== customerId));\n//         showNotification('Customer deleted successfully');\n//       } catch (error) {\n//         showNotification(error.message || 'Error deleting customer', 'error');\n//       }\n//     }\n//   };\n\n//   if (loading) {\n//     return (\n//       <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n//         <CircularProgress />\n//       </Box>\n//     );\n//   }\n\n//   return (\n//     <Box sx={{ p: 3 }}>\n//       {/* ... existing JSX code ... */}\n      \n//       <CustomerForm\n//         open={openForm}\n//         onClose={() => {\n//           setOpenForm(false);\n//           setSelectedCustomer(null);\n//         }}\n//         onSubmit={selectedCustomer ? handleEditCustomer : handleAddCustomer}\n//         initialData={selectedCustomer}\n//       />\n\n//       <Notification\n//         open={notification.open}\n//         message={notification.message}\n//         severity={notification.severity}\n//         onClose={handleCloseNotification}\n//       />\n//     </Box>\n//   );\n// };\n\n// export default Customers;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}