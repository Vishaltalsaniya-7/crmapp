{"ast":null,"code":"var _jsxFileName = \"/home/vishal/Vishal/Projects/src/github.com/crmapp/frontend/src/pages/auth/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Paper, TextField, Button, Typography, Container, Alert, Link } from '@mui/material';\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    register\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      await register(formData);\n      navigate('/login');\n    } catch (err) {\n      setError(err.message || 'Failed to register');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 4,\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            label: \"Full Name\",\n            name: \"name\",\n            autoFocus: true,\n            value: formData.name,\n            onChange: e => setFormData({\n              ...formData,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            label: \"Email Address\",\n            name: \"email\",\n            type: \"email\",\n            value: formData.email,\n            onChange: e => setFormData({\n              ...formData,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\",\n            value: formData.password,\n            onChange: e => setFormData({\n              ...formData,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            label: \"Confirm Password\",\n            name: \"confirmPassword\",\n            type: \"password\",\n            value: formData.confirmPassword,\n            onChange: e => setFormData({\n              ...formData,\n              confirmPassword: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              component: RouterLink,\n              to: \"/login\",\n              variant: \"body2\",\n              children: \"Already have an account? Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"LOE2ho6hSWWlySO7MxbPvhaDx0w=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Box","Paper","TextField","Button","Typography","Container","Alert","Link","useNavigate","RouterLink","useAuth","jsxDEV","_jsxDEV","Register","_s","navigate","register","formData","setFormData","name","email","password","confirmPassword","error","setError","handleSubmit","e","preventDefault","err","message","component","maxWidth","children","sx","marginTop","display","flexDirection","alignItems","p","width","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","onSubmit","margin","required","fullWidth","label","autoFocus","value","onChange","target","type","mt","textAlign","to","_c","$RefreshReg$"],"sources":["/home/vishal/Vishal/Projects/src/github.com/crmapp/frontend/src/pages/auth/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Container,\n  Alert,\n  Link,\n} from '@mui/material';\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const { register } = useAuth();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    try {\n      await register(formData);\n      navigate('/login');\n    } catch (err) {\n      setError(err.message || 'Failed to register');\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box sx={{ marginTop: 8, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <Paper sx={{ p: 4, width: '100%' }}>\n          <Typography component=\"h1\" variant=\"h5\" align=\"center\" gutterBottom>\n            Register\n          </Typography>\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {error}\n            </Alert>\n          )}\n          <form onSubmit={handleSubmit}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Full Name\"\n              name=\"name\"\n              autoFocus\n              value={formData.name}\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Email Address\"\n              name=\"email\"\n              type=\"email\"\n              value={formData.email}\n              onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              name=\"password\"\n              type=\"password\"\n              value={formData.password}\n              onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Confirm Password\"\n              name=\"confirmPassword\"\n              type=\"password\"\n              value={formData.confirmPassword}\n              onChange={(e) => setFormData({ ...formData, confirmPassword: e.target.value })}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n            <Box sx={{ textAlign: 'center' }}>\n              <Link component={RouterLink} to=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Box>\n          </form>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}