{"ast":null,"code":"var _jsxFileName = \"/home/vishal/Vishal/Projects/src/github.com/crmapp/frontend/src/utils/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const checkAuth = () => {\n    const storedUser = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    if (storedUser && token) {\n      setUser(JSON.parse(storedUser));\n      setIsAuthenticated(true);\n    } else {\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const login = (userData, token) => {\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('token', token);\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      login,\n      logout,\n      checkAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"k19B3VQCOMbqjP9Ul958Nm6p/lo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n// import React, { createContext, useState, useContext } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const AuthContext = createContext(null);\n\n// const useAuth = () => {\n//   const context = useContext(AuthContext);\n//   if (!context) {\n//     throw new Error('useAuth must be used within an AuthProvider');\n//   }\n//   return context;\n// };\n\n// const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const navigate = useNavigate();\n\n//   const login = async (userData, token) => {\n//     try {\n//       if (!userData || !token) {\n//         throw new Error('Invalid login data');\n//       }\n//       localStorage.setItem('token', token);\n//       localStorage.setItem('user', JSON.stringify(userData));\n//       setUser(userData);\n//       navigate('/dashboard', { replace: true });\n//     } catch (error) {\n//       console.error('Login error:', error);\n//       throw error;\n//     }\n//   };\n\n//   const logout = () => {\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('user');\n//     setUser(null);\n//     navigate('/login', { replace: true });\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ user, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export { AuthProvider, useAuth };\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","checkAuth","storedUser","localStorage","getItem","token","JSON","parse","login","userData","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/vishal/Vishal/Projects/src/github.com/crmapp/frontend/src/utils/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const checkAuth = () => {\n    const storedUser = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    \n    if (storedUser && token) {\n      setUser(JSON.parse(storedUser));\n      setIsAuthenticated(true);\n    } else {\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n\n  const login = (userData, token) => {\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('token', token);\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated, login, logout, checkAuth }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n// import React, { createContext, useState, useContext } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const AuthContext = createContext(null);\n\n// const useAuth = () => {\n//   const context = useContext(AuthContext);\n//   if (!context) {\n//     throw new Error('useAuth must be used within an AuthProvider');\n//   }\n//   return context;\n// };\n\n// const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const navigate = useNavigate();\n\n//   const login = async (userData, token) => {\n//     try {\n//       if (!userData || !token) {\n//         throw new Error('Invalid login data');\n//       }\n//       localStorage.setItem('token', token);\n//       localStorage.setItem('user', JSON.stringify(userData));\n//       setUser(userData);\n//       navigate('/dashboard', { replace: true });\n//     } catch (error) {\n//       console.error('Login error:', error);\n//       throw error;\n//     }\n//   };\n\n//   const logout = () => {\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('user');\n//     setUser(null);\n//     navigate('/login', { replace: true });\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ user, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export { AuthProvider, useAuth };"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMY,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIF,UAAU,IAAIG,KAAK,EAAE;MACvBP,OAAO,CAACQ,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAAC;MAC/BF,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,MAAM;MACLF,OAAO,CAAC,IAAI,CAAC;MACbE,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC;EAED,MAAMQ,KAAK,GAAGA,CAACC,QAAQ,EAAEJ,KAAK,KAAK;IACjCF,YAAY,CAACO,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACF,QAAQ,CAAC,CAAC;IACtDN,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;IACpCP,OAAO,CAACW,QAAQ,CAAC;IACjBT,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMY,MAAM,GAAGA,CAAA,KAAM;IACnBT,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/BV,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCf,OAAO,CAAC,IAAI,CAAC;IACbE,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,IAAI;MAAEE,eAAe;MAAES,KAAK;MAAEI,MAAM;MAAEX;IAAU,CAAE;IAAAN,QAAA,EAC9EA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,EAAA,CAnCWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAqCzB,OAAO,MAAM2B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGnC,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAAC8B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AACD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAAD,GAAA,CArDaD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}