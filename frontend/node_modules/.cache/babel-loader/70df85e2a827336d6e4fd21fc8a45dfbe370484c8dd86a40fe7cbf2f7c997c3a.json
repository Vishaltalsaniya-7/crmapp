{"ast":null,"code":"var _jsxFileName = \"/home/vishal/Vishal/Projects/src/github.com/crmapp/frontend/src/components/users/Users.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, IconButton, Chip, Tooltip, Snackbar, Alert } from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport PageHeader from '../common/PageHeader';\nimport SearchBar from '../common/SearchBar';\nimport FilterBar from '../common/FilterBar';\nimport DataTable from '../common/DataTable';\nimport UserForm from './UserForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [openForm, setOpenForm] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [filters, setFilters] = useState({});\n  const [searchTerm, setSearchTerm] = useState('');\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const columns = [{\n    id: 'username',\n    label: 'Username'\n  }, {\n    id: 'email',\n    label: 'Email'\n  }, {\n    id: 'role',\n    label: 'Role',\n    render: row => /*#__PURE__*/_jsxDEV(Chip, {\n      label: row.role,\n      color: row.role === 'admin' ? 'primary' : 'default',\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'created_at',\n    label: 'Created At',\n    render: row => new Date(row.created_at).toLocaleDateString()\n  }, {\n    id: 'actions',\n    label: 'Actions',\n    render: row => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Edit\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: () => handleEdit(row),\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Delete\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          color: \"error\",\n          onClick: () => handleDelete(row.id),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }];\n  const filterOptions = [{\n    id: 'role',\n    label: 'Role',\n    options: ['admin', 'user']\n  }];\n  useEffect(() => {\n    fetchUsers();\n  }, [filters, searchTerm]);\n  const showSnackbar = (message, severity = 'success') => {\n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n  };\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Authentication required');\n      }\n      const response = await fetch('http://localhost:8082/user', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to fetch users');\n      }\n      const data = await response.json();\n      setUsers(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      showSnackbar(error.message, 'error');\n      setUsers([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAdd = () => {\n    setSelectedUser(null);\n    setOpenForm(true);\n  };\n  const handleEdit = user => {\n    setSelectedUser(user);\n    setOpenForm(true);\n  };\n  const handleDelete = async id => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) throw new Error('Authentication required');\n        const response = await fetch(`http://localhost:8082/user/${id}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.message || 'Failed to delete user');\n        }\n        showSnackbar('User deleted successfully');\n        fetchUsers();\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        showSnackbar(error.message, 'error');\n      }\n    }\n  };\n  //   const handleSubmit = async (userData) => {\n  //   try {\n  //     const url = selectedUser \n  //       ? `http://localhost:8082/user/${selectedUser.id}`\n  //       : 'http://localhost:8082/user';\n\n  //     // For new user creation, we don't need token\n  //     const token = selectedUser ? localStorage.getItem('token') : null;\n\n  //     const requestBody = {\n  //       username: userData.username.trim(),\n  //       email: userData.email.trim(),\n  //       role: userData.role,\n  //       password: userData.password // Always include password for both create and update\n  //     };\n\n  //     const headers = {\n  //       'Content-Type': 'application/json'\n  //     };\n\n  //     // // Only add Authorization header for updates, not for creation\n  //     // if (selectedUser && token) {\n  //     //   headers['Authorization'] = `Bearer ${token}`;\n  //     // }\n  //     if (selectedUser) {\n  //       const token = localStorage.getItem('token');\n  //       if (!token) throw new Error('Authentication required for updating user');\n  //       headers['Authorization'] = `Bearer ${token}`;\n  //     }\n\n  //     const response = await fetch(url, {\n  //       method: selectedUser ? 'PUT' : 'POST',\n  //       headers: headers,\n  //       body: JSON.stringify(requestBody),\n  //     });\n\n  //     const data = await response.json();\n\n  //     if (!response.ok) {\n  //       throw new Error(data.message || 'Failed to save user');\n  //     }\n\n  //     showSnackbar(`User ${selectedUser ? 'updated' : 'created'} successfully`);\n  //     setOpenForm(false);\n  //     await fetchUsers();\n  //   } catch (error) {\n  //     console.error('Error saving user:', error);\n  //     showSnackbar(error.message || 'Failed to save user', 'error');\n  //   }\n  // };\n  const handleSubmit = async userData => {\n    try {\n      const url = selectedUser ? `http://localhost:8082/user/${selectedUser.id}` : 'http://localhost:8082/user';\n      const token = localStorage.getItem('token');\n      const userEmail = localStorage.getItem('email'); // Get current user's email\n      console.log('Token:', token);\n      console.log('User Email:', userEmail);\n      const requestBody = {\n        username: userData.username.trim(),\n        email: userData.email.trim(),\n        password: userData.password,\n        role: userData.role || 'user',\n        user_email: userEmail // Add user_email to request body\n      };\n      console.log('Request Body:', requestBody);\n      const response = await fetch(url, {\n        method: selectedUser ? 'PUT' : 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n          'X-User-Email': userEmail // Add email in header as well\n        },\n        body: JSON.stringify(requestBody)\n      });\n      const data = await response.json();\n      console.log('Response:', data);\n      if (!response.ok) {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n        throw new Error('Failed to save user');\n      }\n      showSnackbar(`User ${selectedUser ? 'updated' : 'created'} successfully`);\n      setOpenForm(false);\n      await fetchUsers();\n    } catch (error) {\n      console.error('Error saving user:', error);\n      showSnackbar(error.message, 'error');\n    }\n  };\n  const handleSearch = term => {\n    setSearchTerm(term);\n    // Implement search logic here if needed\n  };\n  const handleFilterChange = (filterId, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterId]: value\n    }));\n    // Implement filter logic here if needed\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Users\",\n      action: true,\n      actionText: \"Add User\",\n      actionIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }, this),\n      onActionClick: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch,\n        placeholder: \"Search users...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n        filters: filterOptions,\n        activeFilters: filters,\n        onFilterChange: handleFilterChange,\n        onClearFilters: () => setFilters({})\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: users,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserForm, {\n      open: openForm,\n      user: selectedUser,\n      onClose: () => setOpenForm(false),\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: () => setSnackbar({\n        ...snackbar,\n        open: false\n      }),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setSnackbar({\n          ...snackbar,\n          open: false\n        }),\n        severity: snackbar.severity,\n        sx: {\n          width: '100%'\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"T534L/fFSLUc4QQWiK5NzTrW0Jo=\");\n_c = Users;\nexport default Users;\n\n// import React, { useState, useEffect } from 'react';\n// import {\n//   Box,\n//   IconButton,\n//   Chip,\n//   Tooltip,\n// } from '@mui/material';\n// import {\n//   Add as AddIcon,\n//   Edit as EditIcon,\n//   Delete as DeleteIcon,\n// } from '@mui/icons-material';\n// import PageHeader from '../common/PageHeader';\n// import SearchBar from '../common/SearchBar';\n// import FilterBar from '../common/FilterBar';\n// import DataTable from '../common/DataTable';\n// import UserForm from './UserForm';\n\n// const Users = () => {\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [openForm, setOpenForm] = useState(false);\n//   const [selectedUser, setSelectedUser] = useState(null);\n//   const [filters, setFilters] = useState({});\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   const columns = [\n//     { id: 'username', label: 'Username' },\n//     { id: 'email', label: 'Email' },\n//     {\n//       id: 'role',\n//       label: 'Role',\n//       render: (row) => (\n//         <Chip\n//           label={row.role}\n//           color={row.role === 'admin' ? 'primary' : 'default'}\n//           size=\"small\"\n//         />\n//       )\n//     },\n//     {\n//       id: 'created_at',\n//       label: 'Created At',\n//       render: (row) => new Date(row.created_at).toLocaleDateString()\n//     },\n//     {\n//       id: 'actions',\n//       label: 'Actions',\n//       render: (row) => (\n//         <Box sx={{ display: 'flex', gap: 1 }}>\n//           <Tooltip title=\"Edit\">\n//             <IconButton size=\"small\" onClick={() => handleEdit(row)}>\n//               <EditIcon />\n//             </IconButton>\n//           </Tooltip>\n//           <Tooltip title=\"Delete\">\n//             <IconButton size=\"small\" color=\"error\" onClick={() => handleDelete(row.id)}>\n//               <DeleteIcon />\n//             </IconButton>\n//           </Tooltip>\n//         </Box>\n//       ),\n//     },\n//   ];\n\n//   const filterOptions = [\n//     { id: 'role', label: 'Role', options: ['admin', 'user'] },\n//   ];\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, [filters, searchTerm]);\n\n//   const fetchUsers = async () => {\n//     try {\n//       setLoading(true);\n//       const response = await fetch('http://localhost:8082/user');\n//       if (!response.ok) throw new Error('Failed to fetch users');\n//       const data = await response.json();\n//       setUsers(data);\n//     } catch (error) {\n//       console.error('Error fetching users:', error);\n//       setUsers([]);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleAdd = () => {\n//     setSelectedUser(null);\n//     setOpenForm(true);\n//   };\n\n//   const handleEdit = (user) => {\n//     setSelectedUser(user);\n//     setOpenForm(true);\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (window.confirm('Are you sure you want to delete this user?')) {\n//       try {\n//         const response = await fetch(`http://localhost:8082/user/${id}`, {\n//           method: 'DELETE',\n//         });\n//         if (response.ok) {\n//           fetchUsers();\n//         }\n//       } catch (error) {\n//         console.error('Error deleting user:', error);\n//       }\n//     }\n//   };\n\n//   const handleSubmit = async (userData) => {\n//     try {\n//       const url = selectedUser \n//         ? `http://localhost:8082/user/${selectedUser.id}`\n//         : 'http://localhost:8082/user';\n\n//       const response = await fetch(url, {\n//         method: selectedUser ? 'PUT' : 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(userData),\n//       });\n\n//       if (response.ok) {\n//         setOpenForm(false);\n//         fetchUsers();\n//       }\n//     } catch (error) {\n//       console.error('Error saving user:', error);\n//     }\n//   };\n\n//   return (\n//     <Box sx={{ p: 3 }}>\n//       <PageHeader\n//         title=\"Users\"\n//         action={true}\n//         actionText=\"Add User\"\n//         actionIcon={<AddIcon />}\n//         onActionClick={handleAdd}\n//       />\n\n//       <Box sx={{ mb: 3 }}>\n//         <SearchBar\n//           onSearch={setSearchTerm}\n//           placeholder=\"Search users...\"\n//         />\n//         <FilterBar\n//           filters={filterOptions}\n//           activeFilters={filters}\n//           onFilterChange={(id, value) => setFilters({ ...filters, [id]: value })}\n//           onClearFilters={() => setFilters({})}\n//         />\n//       </Box>\n\n//       <DataTable\n//         columns={columns}\n//         data={users}\n//         loading={loading}\n//       />\n\n//       <UserForm\n//         open={openForm}\n//         user={selectedUser}\n//         onClose={() => setOpenForm(false)}\n//         onSubmit={handleSubmit}\n//       />\n//     </Box>\n//   );\n// };\n\n// export default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","Box","IconButton","Chip","Tooltip","Snackbar","Alert","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","PageHeader","SearchBar","FilterBar","DataTable","UserForm","jsxDEV","_jsxDEV","Users","_s","users","setUsers","loading","setLoading","openForm","setOpenForm","selectedUser","setSelectedUser","filters","setFilters","searchTerm","setSearchTerm","snackbar","setSnackbar","open","message","severity","columns","id","label","render","row","role","color","size","fileName","_jsxFileName","lineNumber","columnNumber","Date","created_at","toLocaleDateString","sx","display","gap","children","title","onClick","handleEdit","handleDelete","filterOptions","options","fetchUsers","showSnackbar","token","localStorage","getItem","Error","response","fetch","headers","ok","error","json","data","Array","isArray","console","handleAdd","user","window","confirm","method","handleSubmit","userData","url","userEmail","log","requestBody","username","trim","email","password","user_email","body","JSON","stringify","handleSearch","term","handleFilterChange","filterId","value","prev","p","action","actionText","actionIcon","onActionClick","mb","onSearch","placeholder","activeFilters","onFilterChange","onClearFilters","onClose","onSubmit","autoHideDuration","width","_c","$RefreshReg$"],"sources":["/home/vishal/Vishal/Projects/src/github.com/crmapp/frontend/src/components/users/Users.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Chip,\r\n  Tooltip,\r\n  Snackbar,\r\n  Alert\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n} from '@mui/icons-material';\r\nimport PageHeader from '../common/PageHeader';\r\nimport SearchBar from '../common/SearchBar';\r\nimport FilterBar from '../common/FilterBar';\r\nimport DataTable from '../common/DataTable';\r\nimport UserForm from './UserForm';\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [openForm, setOpenForm] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [filters, setFilters] = useState({});\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n\r\n  const columns = [\r\n    { id: 'username', label: 'Username' },\r\n    { id: 'email', label: 'Email' },\r\n    {\r\n      id: 'role',\r\n      label: 'Role',\r\n      render: (row) => (\r\n        <Chip\r\n          label={row.role}\r\n          color={row.role === 'admin' ? 'primary' : 'default'}\r\n          size=\"small\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      id: 'created_at',\r\n      label: 'Created At',\r\n      render: (row) => new Date(row.created_at).toLocaleDateString()\r\n    },\r\n    {\r\n      id: 'actions',\r\n      label: 'Actions',\r\n      render: (row) => (\r\n        <Box sx={{ display: 'flex', gap: 1 }}>\r\n          <Tooltip title=\"Edit\">\r\n            <IconButton size=\"small\" onClick={() => handleEdit(row)}>\r\n              <EditIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton size=\"small\" color=\"error\" onClick={() => handleDelete(row.id)}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const filterOptions = [\r\n    { id: 'role', label: 'Role', options: ['admin', 'user'] },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [filters, searchTerm]);\r\n\r\n  const showSnackbar = (message, severity = 'success') => {\r\n    setSnackbar({ open: true, message, severity });\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('Authentication required');\r\n      }\r\n\r\n      const response = await fetch('http://localhost:8082/user', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'Failed to fetch users');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setUsers(Array.isArray(data) ? data : []);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      showSnackbar(error.message, 'error');\r\n      setUsers([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    setSelectedUser(null);\r\n    setOpenForm(true);\r\n  };\r\n\r\n  const handleEdit = (user) => {\r\n    setSelectedUser(user);\r\n    setOpenForm(true);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this user?')) {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) throw new Error('Authentication required');\r\n\r\n        const response = await fetch(`http://localhost:8082/user/${id}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const error = await response.json();\r\n          throw new Error(error.message || 'Failed to delete user');\r\n        }\r\n\r\n        showSnackbar('User deleted successfully');\r\n        fetchUsers();\r\n      } catch (error) {\r\n        console.error('Error deleting user:', error);\r\n        showSnackbar(error.message, 'error');\r\n      }\r\n    }\r\n  };  \r\n  //   const handleSubmit = async (userData) => {\r\n  //   try {\r\n  //     const url = selectedUser \r\n  //       ? `http://localhost:8082/user/${selectedUser.id}`\r\n  //       : 'http://localhost:8082/user';\r\n\r\n  //     // For new user creation, we don't need token\r\n  //     const token = selectedUser ? localStorage.getItem('token') : null;\r\n      \r\n  //     const requestBody = {\r\n  //       username: userData.username.trim(),\r\n  //       email: userData.email.trim(),\r\n  //       role: userData.role,\r\n  //       password: userData.password // Always include password for both create and update\r\n  //     };\r\n\r\n  //     const headers = {\r\n  //       'Content-Type': 'application/json'\r\n  //     };\r\n\r\n  //     // // Only add Authorization header for updates, not for creation\r\n  //     // if (selectedUser && token) {\r\n  //     //   headers['Authorization'] = `Bearer ${token}`;\r\n  //     // }\r\n  //     if (selectedUser) {\r\n  //       const token = localStorage.getItem('token');\r\n  //       if (!token) throw new Error('Authentication required for updating user');\r\n  //       headers['Authorization'] = `Bearer ${token}`;\r\n  //     }\r\n\r\n  //     const response = await fetch(url, {\r\n  //       method: selectedUser ? 'PUT' : 'POST',\r\n  //       headers: headers,\r\n  //       body: JSON.stringify(requestBody),\r\n  //     });\r\n\r\n  //     const data = await response.json();\r\n\r\n  //     if (!response.ok) {\r\n  //       throw new Error(data.message || 'Failed to save user');\r\n  //     }\r\n\r\n  //     showSnackbar(`User ${selectedUser ? 'updated' : 'created'} successfully`);\r\n  //     setOpenForm(false);\r\n  //     await fetchUsers();\r\n  //   } catch (error) {\r\n  //     console.error('Error saving user:', error);\r\n  //     showSnackbar(error.message || 'Failed to save user', 'error');\r\n  //   }\r\n  // };\r\n  const handleSubmit = async (userData) => {\r\n    try {\r\n      const url = selectedUser \r\n        ? `http://localhost:8082/user/${selectedUser.id}`\r\n        : 'http://localhost:8082/user';\r\n\r\n      const token = localStorage.getItem('token');\r\n      const userEmail = localStorage.getItem('email'); // Get current user's email\r\n      console.log('Token:', token);\r\n      console.log('User Email:', userEmail);\r\n\r\n      const requestBody = {\r\n        username: userData.username.trim(),\r\n        email: userData.email.trim(),\r\n        password: userData.password,\r\n        role: userData.role || 'user',\r\n        user_email: userEmail // Add user_email to request body\r\n      };\r\n      console.log('Request Body:', requestBody);\r\n\r\n      const response = await fetch(url, {\r\n        method: selectedUser ? 'PUT' : 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n          'X-User-Email': userEmail // Add email in header as well\r\n        },\r\n        body: JSON.stringify(requestBody)\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log('Response:', data);\r\n\r\n      if (!response.ok) {\r\n        if (data.error) {\r\n          throw new Error(data.error);\r\n        }\r\n        throw new Error('Failed to save user');\r\n      }\r\n\r\n      showSnackbar(`User ${selectedUser ? 'updated' : 'created'} successfully`);\r\n      setOpenForm(false);\r\n      await fetchUsers();\r\n    } catch (error) {\r\n      console.error('Error saving user:', error);\r\n      showSnackbar(error.message, 'error');\r\n    }\r\n  };    const handleSearch = (term) => {\r\n    setSearchTerm(term);\r\n    // Implement search logic here if needed\r\n  };\r\n\r\n  const handleFilterChange = (filterId, value) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [filterId]: value\r\n    }));\r\n    // Implement filter logic here if needed\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <PageHeader\r\n        title=\"Users\"\r\n        action={true}\r\n        actionText=\"Add User\"\r\n        actionIcon={<AddIcon />}\r\n        onActionClick={handleAdd}\r\n      />\r\n\r\n      <Box sx={{ mb: 3 }}>\r\n        <SearchBar\r\n          onSearch={handleSearch}\r\n          placeholder=\"Search users...\"\r\n        />\r\n        <FilterBar\r\n          filters={filterOptions}\r\n          activeFilters={filters}\r\n          onFilterChange={handleFilterChange}\r\n          onClearFilters={() => setFilters({})}\r\n        />\r\n      </Box>\r\n\r\n      <DataTable\r\n        columns={columns}\r\n        data={users}\r\n        loading={loading}\r\n      />\r\n\r\n      <UserForm\r\n        open={openForm}\r\n        user={selectedUser}\r\n        onClose={() => setOpenForm(false)}\r\n        onSubmit={handleSubmit}\r\n      />\r\n\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n          severity={snackbar.severity}\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import {\r\n//   Box,\r\n//   IconButton,\r\n//   Chip,\r\n//   Tooltip,\r\n// } from '@mui/material';\r\n// import {\r\n//   Add as AddIcon,\r\n//   Edit as EditIcon,\r\n//   Delete as DeleteIcon,\r\n// } from '@mui/icons-material';\r\n// import PageHeader from '../common/PageHeader';\r\n// import SearchBar from '../common/SearchBar';\r\n// import FilterBar from '../common/FilterBar';\r\n// import DataTable from '../common/DataTable';\r\n// import UserForm from './UserForm';\r\n\r\n// const Users = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [openForm, setOpenForm] = useState(false);\r\n//   const [selectedUser, setSelectedUser] = useState(null);\r\n//   const [filters, setFilters] = useState({});\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n\r\n//   const columns = [\r\n//     { id: 'username', label: 'Username' },\r\n//     { id: 'email', label: 'Email' },\r\n//     {\r\n//       id: 'role',\r\n//       label: 'Role',\r\n//       render: (row) => (\r\n//         <Chip\r\n//           label={row.role}\r\n//           color={row.role === 'admin' ? 'primary' : 'default'}\r\n//           size=\"small\"\r\n//         />\r\n//       )\r\n//     },\r\n//     {\r\n//       id: 'created_at',\r\n//       label: 'Created At',\r\n//       render: (row) => new Date(row.created_at).toLocaleDateString()\r\n//     },\r\n//     {\r\n//       id: 'actions',\r\n//       label: 'Actions',\r\n//       render: (row) => (\r\n//         <Box sx={{ display: 'flex', gap: 1 }}>\r\n//           <Tooltip title=\"Edit\">\r\n//             <IconButton size=\"small\" onClick={() => handleEdit(row)}>\r\n//               <EditIcon />\r\n//             </IconButton>\r\n//           </Tooltip>\r\n//           <Tooltip title=\"Delete\">\r\n//             <IconButton size=\"small\" color=\"error\" onClick={() => handleDelete(row.id)}>\r\n//               <DeleteIcon />\r\n//             </IconButton>\r\n//           </Tooltip>\r\n//         </Box>\r\n//       ),\r\n//     },\r\n//   ];\r\n\r\n//   const filterOptions = [\r\n//     { id: 'role', label: 'Role', options: ['admin', 'user'] },\r\n//   ];\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, [filters, searchTerm]);\r\n\r\n//   const fetchUsers = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const response = await fetch('http://localhost:8082/user');\r\n//       if (!response.ok) throw new Error('Failed to fetch users');\r\n//       const data = await response.json();\r\n//       setUsers(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching users:', error);\r\n//       setUsers([]);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleAdd = () => {\r\n//     setSelectedUser(null);\r\n//     setOpenForm(true);\r\n//   };\r\n\r\n//   const handleEdit = (user) => {\r\n//     setSelectedUser(user);\r\n//     setOpenForm(true);\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (window.confirm('Are you sure you want to delete this user?')) {\r\n//       try {\r\n//         const response = await fetch(`http://localhost:8082/user/${id}`, {\r\n//           method: 'DELETE',\r\n//         });\r\n//         if (response.ok) {\r\n//           fetchUsers();\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Error deleting user:', error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (userData) => {\r\n//     try {\r\n//       const url = selectedUser \r\n//         ? `http://localhost:8082/user/${selectedUser.id}`\r\n//         : 'http://localhost:8082/user';\r\n      \r\n//       const response = await fetch(url, {\r\n//         method: selectedUser ? 'PUT' : 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(userData),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         setOpenForm(false);\r\n//         fetchUsers();\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error saving user:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Box sx={{ p: 3 }}>\r\n//       <PageHeader\r\n//         title=\"Users\"\r\n//         action={true}\r\n//         actionText=\"Add User\"\r\n//         actionIcon={<AddIcon />}\r\n//         onActionClick={handleAdd}\r\n//       />\r\n\r\n//       <Box sx={{ mb: 3 }}>\r\n//         <SearchBar\r\n//           onSearch={setSearchTerm}\r\n//           placeholder=\"Search users...\"\r\n//         />\r\n//         <FilterBar\r\n//           filters={filterOptions}\r\n//           activeFilters={filters}\r\n//           onFilterChange={(id, value) => setFilters({ ...filters, [id]: value })}\r\n//           onClearFilters={() => setFilters({})}\r\n//         />\r\n//       </Box>\r\n\r\n//       <DataTable\r\n//         columns={columns}\r\n//         data={users}\r\n//         loading={loading}\r\n//       />\r\n\r\n//       <UserForm\r\n//         open={openForm}\r\n//         user={selectedUser}\r\n//         onClose={() => setOpenForm(false)}\r\n//         onSubmit={handleSubmit}\r\n//       />\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Users;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,UAAU,EACVC,IAAI,EACJC,OAAO,EACPC,QAAQ,EACRC,KAAK,QACA,eAAe;AACtB,SACEC,GAAG,IAAIC,OAAO,EACdC,IAAI,IAAIC,QAAQ,EAChBC,MAAM,IAAIC,UAAU,QACf,qBAAqB;AAC5B,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC+B,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACiC,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC;IAAEqC,IAAI,EAAE,KAAK;IAAEC,OAAO,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAU,CAAC,CAAC;EAE3F,MAAMC,OAAO,GAAG,CACd;IAAEC,EAAE,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAW,CAAC,EACrC;IAAED,EAAE,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAC/B;IACED,EAAE,EAAE,MAAM;IACVC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAGC,GAAG,iBACVxB,OAAA,CAAChB,IAAI;MACHsC,KAAK,EAAEE,GAAG,CAACC,IAAK;MAChBC,KAAK,EAAEF,GAAG,CAACC,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG,SAAU;MACpDE,IAAI,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAEL,CAAC,EACD;IACEV,EAAE,EAAE,YAAY;IAChBC,KAAK,EAAE,YAAY;IACnBC,MAAM,EAAGC,GAAG,IAAK,IAAIQ,IAAI,CAACR,GAAG,CAACS,UAAU,CAAC,CAACC,kBAAkB,CAAC;EAC/D,CAAC,EACD;IACEb,EAAE,EAAE,SAAS;IACbC,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAGC,GAAG,iBACVxB,OAAA,CAAClB,GAAG;MAACqD,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAE,CAAE;MAAAC,QAAA,gBACnCtC,OAAA,CAACf,OAAO;QAACsD,KAAK,EAAC,MAAM;QAAAD,QAAA,eACnBtC,OAAA,CAACjB,UAAU;UAAC4C,IAAI,EAAC,OAAO;UAACa,OAAO,EAAEA,CAAA,KAAMC,UAAU,CAACjB,GAAG,CAAE;UAAAc,QAAA,eACtDtC,OAAA,CAACT,QAAQ;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACV/B,OAAA,CAACf,OAAO;QAACsD,KAAK,EAAC,QAAQ;QAAAD,QAAA,eACrBtC,OAAA,CAACjB,UAAU;UAAC4C,IAAI,EAAC,OAAO;UAACD,KAAK,EAAC,OAAO;UAACc,OAAO,EAAEA,CAAA,KAAME,YAAY,CAAClB,GAAG,CAACH,EAAE,CAAE;UAAAiB,QAAA,eACzEtC,OAAA,CAACP,UAAU;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAET,CAAC,CACF;EAED,MAAMY,aAAa,GAAG,CACpB;IAAEtB,EAAE,EAAE,MAAM;IAAEC,KAAK,EAAE,MAAM;IAAEsB,OAAO,EAAE,CAAC,OAAO,EAAE,MAAM;EAAE,CAAC,CAC1D;EAED/D,SAAS,CAAC,MAAM;IACdgE,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAAClC,OAAO,EAAEE,UAAU,CAAC,CAAC;EAEzB,MAAMiC,YAAY,GAAGA,CAAC5B,OAAO,EAAEC,QAAQ,GAAG,SAAS,KAAK;IACtDH,WAAW,CAAC;MAAEC,IAAI,EAAE,IAAI;MAAEC,OAAO;MAAEC;IAAS,CAAC,CAAC;EAChD,CAAC;EAED,MAAM0B,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACFvC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMyC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;QACzDC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUN,KAAK;QAClC;MACF,CAAC,CAAC;MAEF,IAAI,CAACI,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACnC,MAAM,IAAIN,KAAK,CAACK,KAAK,CAACrC,OAAO,IAAI,uBAAuB,CAAC;MAC3D;MAEA,MAAMuC,IAAI,GAAG,MAAMN,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCpD,QAAQ,CAACsD,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE,CAAC;IAC3C,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CT,YAAY,CAACS,KAAK,CAACrC,OAAO,EAAE,OAAO,CAAC;MACpCd,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMuD,SAAS,GAAGA,CAAA,KAAM;IACtBnD,eAAe,CAAC,IAAI,CAAC;IACrBF,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMiC,UAAU,GAAIqB,IAAI,IAAK;IAC3BpD,eAAe,CAACoD,IAAI,CAAC;IACrBtD,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMkC,YAAY,GAAG,MAAOrB,EAAE,IAAK;IACjC,IAAI0C,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,EAAE;MAChE,IAAI;QACF,MAAMjB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE,MAAM,IAAIG,KAAK,CAAC,yBAAyB,CAAC;QAEtD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B/B,EAAE,EAAE,EAAE;UAC/D4C,MAAM,EAAE,QAAQ;UAChBZ,OAAO,EAAE;YACP,eAAe,EAAE,UAAUN,KAAK;UAClC;QACF,CAAC,CAAC;QAEF,IAAI,CAACI,QAAQ,CAACG,EAAE,EAAE;UAChB,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;UACnC,MAAM,IAAIN,KAAK,CAACK,KAAK,CAACrC,OAAO,IAAI,uBAAuB,CAAC;QAC3D;QAEA4B,YAAY,CAAC,2BAA2B,CAAC;QACzCD,UAAU,CAAC,CAAC;MACd,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdK,OAAO,CAACL,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CT,YAAY,CAACS,KAAK,CAACrC,OAAO,EAAE,OAAO,CAAC;MACtC;IACF;EACF,CAAC;EACD;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMgD,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACvC,IAAI;MACF,MAAMC,GAAG,GAAG3D,YAAY,GACpB,8BAA8BA,YAAY,CAACY,EAAE,EAAE,GAC/C,4BAA4B;MAEhC,MAAM0B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMoB,SAAS,GAAGrB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MACjDW,OAAO,CAACU,GAAG,CAAC,QAAQ,EAAEvB,KAAK,CAAC;MAC5Ba,OAAO,CAACU,GAAG,CAAC,aAAa,EAAED,SAAS,CAAC;MAErC,MAAME,WAAW,GAAG;QAClBC,QAAQ,EAAEL,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC;QAClCC,KAAK,EAAEP,QAAQ,CAACO,KAAK,CAACD,IAAI,CAAC,CAAC;QAC5BE,QAAQ,EAAER,QAAQ,CAACQ,QAAQ;QAC3BlD,IAAI,EAAE0C,QAAQ,CAAC1C,IAAI,IAAI,MAAM;QAC7BmD,UAAU,EAAEP,SAAS,CAAC;MACxB,CAAC;MACDT,OAAO,CAACU,GAAG,CAAC,eAAe,EAAEC,WAAW,CAAC;MAEzC,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAACgB,GAAG,EAAE;QAChCH,MAAM,EAAExD,YAAY,GAAG,KAAK,GAAG,MAAM;QACrC4C,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUN,KAAK,EAAE;UAClC,cAAc,EAAEsB,SAAS,CAAC;QAC5B,CAAC;QACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW;MAClC,CAAC,CAAC;MAEF,MAAMd,IAAI,GAAG,MAAMN,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCI,OAAO,CAACU,GAAG,CAAC,WAAW,EAAEb,IAAI,CAAC;MAE9B,IAAI,CAACN,QAAQ,CAACG,EAAE,EAAE;QAChB,IAAIG,IAAI,CAACF,KAAK,EAAE;UACd,MAAM,IAAIL,KAAK,CAACO,IAAI,CAACF,KAAK,CAAC;QAC7B;QACA,MAAM,IAAIL,KAAK,CAAC,qBAAqB,CAAC;MACxC;MAEAJ,YAAY,CAAC,QAAQrC,YAAY,GAAG,SAAS,GAAG,SAAS,eAAe,CAAC;MACzED,WAAW,CAAC,KAAK,CAAC;MAClB,MAAMqC,UAAU,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CT,YAAY,CAACS,KAAK,CAACrC,OAAO,EAAE,OAAO,CAAC;IACtC;EACF,CAAC;EAAK,MAAM8D,YAAY,GAAIC,IAAI,IAAK;IACnCnE,aAAa,CAACmE,IAAI,CAAC;IACnB;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;IAC9CxE,UAAU,CAACyE,IAAI,KAAK;MAClB,GAAGA,IAAI;MACP,CAACF,QAAQ,GAAGC;IACd,CAAC,CAAC,CAAC;IACH;EACF,CAAC;EAED,oBACEpF,OAAA,CAAClB,GAAG;IAACqD,EAAE,EAAE;MAAEmD,CAAC,EAAE;IAAE,CAAE;IAAAhD,QAAA,gBAChBtC,OAAA,CAACN,UAAU;MACT6C,KAAK,EAAC,OAAO;MACbgD,MAAM,EAAE,IAAK;MACbC,UAAU,EAAC,UAAU;MACrBC,UAAU,eAAEzF,OAAA,CAACX,OAAO;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MACxB2D,aAAa,EAAE7B;IAAU;MAAAjC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAEF/B,OAAA,CAAClB,GAAG;MAACqD,EAAE,EAAE;QAAEwD,EAAE,EAAE;MAAE,CAAE;MAAArD,QAAA,gBACjBtC,OAAA,CAACL,SAAS;QACRiG,QAAQ,EAAEZ,YAAa;QACvBa,WAAW,EAAC;MAAiB;QAAAjE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACF/B,OAAA,CAACJ,SAAS;QACRe,OAAO,EAAEgC,aAAc;QACvBmD,aAAa,EAAEnF,OAAQ;QACvBoF,cAAc,EAAEb,kBAAmB;QACnCc,cAAc,EAAEA,CAAA,KAAMpF,UAAU,CAAC,CAAC,CAAC;MAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN/B,OAAA,CAACH,SAAS;MACRuB,OAAO,EAAEA,OAAQ;MACjBqC,IAAI,EAAEtD,KAAM;MACZE,OAAO,EAAEA;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eAEF/B,OAAA,CAACF,QAAQ;MACPmB,IAAI,EAAEV,QAAS;MACfuD,IAAI,EAAErD,YAAa;MACnBwF,OAAO,EAAEA,CAAA,KAAMzF,WAAW,CAAC,KAAK,CAAE;MAClC0F,QAAQ,EAAEhC;IAAa;MAAAtC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAEF/B,OAAA,CAACd,QAAQ;MACP+B,IAAI,EAAEF,QAAQ,CAACE,IAAK;MACpBkF,gBAAgB,EAAE,IAAK;MACvBF,OAAO,EAAEA,CAAA,KAAMjF,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEE,IAAI,EAAE;MAAM,CAAC,CAAE;MAAAqB,QAAA,eAEzDtC,OAAA,CAACb,KAAK;QACJ8G,OAAO,EAAEA,CAAA,KAAMjF,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEE,IAAI,EAAE;QAAM,CAAC,CAAE;QACzDE,QAAQ,EAAEJ,QAAQ,CAACI,QAAS;QAC5BgB,EAAE,EAAE;UAAEiE,KAAK,EAAE;QAAO,CAAE;QAAA9D,QAAA,EAErBvB,QAAQ,CAACG;MAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA/RID,KAAK;AAAAoG,EAAA,GAALpG,KAAK;AAiSX,eAAeA,KAAK;;AAIpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}