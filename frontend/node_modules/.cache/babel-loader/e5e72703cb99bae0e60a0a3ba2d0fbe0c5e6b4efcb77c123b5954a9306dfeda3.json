{"ast":null,"code":"const handleSubmit = async userData => {\n  try {\n    const url = selectedUser ? `http://localhost:8082/user/${selectedUser.id}` : 'http://localhost:8082/user';\n\n    // For new user creation, don't send token\n    const token = selectedUser ? localStorage.getItem('token') : null;\n    const requestBody = {\n      username: userData.username,\n      email: userData.email,\n      role: userData.role\n    };\n\n    // Include password only if provided or for new user\n    if (!selectedUser || userData.password) {\n      requestBody.password = userData.password;\n    }\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n\n    // Add authorization header only for existing user updates\n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n    const response = await fetch(url, {\n      method: selectedUser ? 'PUT' : 'POST',\n      headers: headers,\n      body: JSON.stringify(requestBody)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to save user');\n    }\n\n    // For new user creation, store the token if provided\n    if (!selectedUser && data.token) {\n      localStorage.setItem('token', data.token);\n    }\n    showSnackbar(`User ${selectedUser ? 'updated' : 'created'} successfully`);\n    setOpenForm(false);\n    fetchUsers();\n  } catch (error) {\n    console.error('Error saving user:', error);\n    showSnackbar(error.message || 'Failed to save user. Please check your input and try again.', 'error');\n  }\n};","map":{"version":3,"names":["handleSubmit","userData","url","selectedUser","id","token","localStorage","getItem","requestBody","username","email","role","password","headers","response","fetch","method","body","JSON","stringify","data","json","ok","Error","message","setItem","showSnackbar","setOpenForm","fetchUsers","error","console"],"sources":["/home/vishal/Vishal/Projects/src/github.com/crmapp/frontend/src/components/users/Users.js"],"sourcesContent":["const handleSubmit = async (userData) => {\r\n    try {\r\n      const url = selectedUser \r\n        ? `http://localhost:8082/user/${selectedUser.id}`\r\n        : 'http://localhost:8082/user';\r\n      \r\n      // For new user creation, don't send token\r\n      const token = selectedUser ? localStorage.getItem('token') : null;\r\n      \r\n      const requestBody = {\r\n        username: userData.username,\r\n        email: userData.email,\r\n        role: userData.role\r\n      };\r\n\r\n      // Include password only if provided or for new user\r\n      if (!selectedUser || userData.password) {\r\n        requestBody.password = userData.password;\r\n      }\r\n\r\n      const headers = {\r\n        'Content-Type': 'application/json'\r\n      };\r\n\r\n      // Add authorization header only for existing user updates\r\n      if (token) {\r\n        headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n\r\n      const response = await fetch(url, {\r\n        method: selectedUser ? 'PUT' : 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to save user');\r\n      }\r\n\r\n      // For new user creation, store the token if provided\r\n      if (!selectedUser && data.token) {\r\n        localStorage.setItem('token', data.token);\r\n      }\r\n\r\n      showSnackbar(`User ${selectedUser ? 'updated' : 'created'} successfully`);\r\n      setOpenForm(false);\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error('Error saving user:', error);\r\n      showSnackbar(error.message || 'Failed to save user. Please check your input and try again.', 'error');\r\n    }\r\n  };"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,QAAQ,IAAK;EACrC,IAAI;IACF,MAAMC,GAAG,GAAGC,YAAY,GACpB,8BAA8BA,YAAY,CAACC,EAAE,EAAE,GAC/C,4BAA4B;;IAEhC;IACA,MAAMC,KAAK,GAAGF,YAAY,GAAGG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI;IAEjE,MAAMC,WAAW,GAAG;MAClBC,QAAQ,EAAER,QAAQ,CAACQ,QAAQ;MAC3BC,KAAK,EAAET,QAAQ,CAACS,KAAK;MACrBC,IAAI,EAAEV,QAAQ,CAACU;IACjB,CAAC;;IAED;IACA,IAAI,CAACR,YAAY,IAAIF,QAAQ,CAACW,QAAQ,EAAE;MACtCJ,WAAW,CAACI,QAAQ,GAAGX,QAAQ,CAACW,QAAQ;IAC1C;IAEA,MAAMC,OAAO,GAAG;MACd,cAAc,EAAE;IAClB,CAAC;;IAED;IACA,IAAIR,KAAK,EAAE;MACTQ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUR,KAAK,EAAE;IAC9C;IAEA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACb,GAAG,EAAE;MAChCc,MAAM,EAAEb,YAAY,GAAG,KAAK,GAAG,MAAM;MACrCU,OAAO,EAAEA,OAAO;MAChBI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,WAAW;IAClC,CAAC,CAAC;IAEF,MAAMY,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,qBAAqB,CAAC;IACxD;;IAEA;IACA,IAAI,CAACrB,YAAY,IAAIiB,IAAI,CAACf,KAAK,EAAE;MAC/BC,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEL,IAAI,CAACf,KAAK,CAAC;IAC3C;IAEAqB,YAAY,CAAC,QAAQvB,YAAY,GAAG,SAAS,GAAG,SAAS,eAAe,CAAC;IACzEwB,WAAW,CAAC,KAAK,CAAC;IAClBC,UAAU,CAAC,CAAC;EACd,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1CH,YAAY,CAACG,KAAK,CAACL,OAAO,IAAI,6DAA6D,EAAE,OAAO,CAAC;EACvG;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}