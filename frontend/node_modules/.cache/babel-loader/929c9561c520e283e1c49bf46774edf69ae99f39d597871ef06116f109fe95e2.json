{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import {\n//   Box,\n//   IconButton,\n//   Chip,\n//   Tooltip,\n// } from '@mui/material';\n// import {\n//   Add as AddIcon,\n//   Edit as EditIcon,\n//   Delete as DeleteIcon,\n// } from '@mui/icons-material';\n// import PageHeader from '../common/PageHeader';\n// import SearchBar from '../common/SearchBar';\n// import FilterBar from '../common/FilterBar';\n// import DataTable from '../common/DataTable';\n// import UserForm from './UserForm';\n\n// const Users = () => {\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [openForm, setOpenForm] = useState(false);\n//   const [selectedUser, setSelectedUser] = useState(null);\n//   const [filters, setFilters] = useState({});\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   const columns = [\n//     { id: 'username', label: 'Username' },\n//     { id: 'email', label: 'Email' },\n//     {\n//       id: 'role',\n//       label: 'Role',\n//       render: (row) => (\n//         <Chip\n//           label={row.role}\n//           color={row.role === 'admin' ? 'primary' : 'default'}\n//           size=\"small\"\n//         />\n//       )\n//     },\n//     {\n//       id: 'created_at',\n//       label: 'Created At',\n//       render: (row) => new Date(row.created_at).toLocaleDateString()\n//     },\n//     {\n//       id: 'actions',\n//       label: 'Actions',\n//       render: (row) => (\n//         <Box sx={{ display: 'flex', gap: 1 }}>\n//           <Tooltip title=\"Edit\">\n//             <IconButton size=\"small\" onClick={() => handleEdit(row)}>\n//               <EditIcon />\n//             </IconButton>\n//           </Tooltip>\n//           <Tooltip title=\"Delete\">\n//             <IconButton size=\"small\" color=\"error\" onClick={() => handleDelete(row.id)}>\n//               <DeleteIcon />\n//             </IconButton>\n//           </Tooltip>\n//         </Box>\n//       ),\n//     },\n//   ];\n\n//   const filterOptions = [\n//     { id: 'role', label: 'Role', options: ['admin', 'user'] },\n//   ];\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, [filters, searchTerm]);\n\n//   const fetchUsers = async () => {\n//     try {\n//       setLoading(true);\n//       const response = await fetch('http://localhost:8082/user');\n//       if (!response.ok) throw new Error('Failed to fetch users');\n//       const data = await response.json();\n//       setUsers(data);\n//     } catch (error) {\n//       console.error('Error fetching users:', error);\n//       setUsers([]);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleAdd = () => {\n//     setSelectedUser(null);\n//     setOpenForm(true);\n//   };\n\n//   const handleEdit = (user) => {\n//     setSelectedUser(user);\n//     setOpenForm(true);\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (window.confirm('Are you sure you want to delete this user?')) {\n//       try {\n//         const response = await fetch(`http://localhost:8082/user/${id}`, {\n//           method: 'DELETE',\n//         });\n//         if (response.ok) {\n//           fetchUsers();\n//         }\n//       } catch (error) {\n//         console.error('Error deleting user:', error);\n//       }\n//     }\n//   };\n\n//   const handleSubmit = async (userData) => {\n//     try {\n//       const url = selectedUser \n//         ? `http://localhost:8082/user/${selectedUser.id}`\n//         : 'http://localhost:8082/user';\n\n//       const response = await fetch(url, {\n//         method: selectedUser ? 'PUT' : 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(userData),\n//       });\n\n//       if (response.ok) {\n//         setOpenForm(false);\n//         fetchUsers();\n//       }\n//     } catch (error) {\n//       console.error('Error saving user:', error);\n//     }\n//   };\n\n//   return (\n//     <Box sx={{ p: 3 }}>\n//       <PageHeader\n//         title=\"Users\"\n//         action={true}\n//         actionText=\"Add User\"\n//         actionIcon={<AddIcon />}\n//         onActionClick={handleAdd}\n//       />\n\n//       <Box sx={{ mb: 3 }}>\n//         <SearchBar\n//           onSearch={setSearchTerm}\n//           placeholder=\"Search users...\"\n//         />\n//         <FilterBar\n//           filters={filterOptions}\n//           activeFilters={filters}\n//           onFilterChange={(id, value) => setFilters({ ...filters, [id]: value })}\n//           onClearFilters={() => setFilters({})}\n//         />\n//       </Box>\n\n//       <DataTable\n//         columns={columns}\n//         data={users}\n//         loading={loading}\n//       />\n\n//       <UserForm\n//         open={openForm}\n//         user={selectedUser}\n//         onClose={() => setOpenForm(false)}\n//         onSubmit={handleSubmit}\n//       />\n//     </Box>\n//   );\n// };\n\n// export default Users;","map":{"version":3,"names":[],"sources":["/home/vishal/Vishal/Projects/src/github.com/crmapp/frontend/src/components/users/Users.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import {\r\n//   Box,\r\n//   IconButton,\r\n//   Chip,\r\n//   Tooltip,\r\n// } from '@mui/material';\r\n// import {\r\n//   Add as AddIcon,\r\n//   Edit as EditIcon,\r\n//   Delete as DeleteIcon,\r\n// } from '@mui/icons-material';\r\n// import PageHeader from '../common/PageHeader';\r\n// import SearchBar from '../common/SearchBar';\r\n// import FilterBar from '../common/FilterBar';\r\n// import DataTable from '../common/DataTable';\r\n// import UserForm from './UserForm';\r\n\r\n// const Users = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [openForm, setOpenForm] = useState(false);\r\n//   const [selectedUser, setSelectedUser] = useState(null);\r\n//   const [filters, setFilters] = useState({});\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n\r\n//   const columns = [\r\n//     { id: 'username', label: 'Username' },\r\n//     { id: 'email', label: 'Email' },\r\n//     {\r\n//       id: 'role',\r\n//       label: 'Role',\r\n//       render: (row) => (\r\n//         <Chip\r\n//           label={row.role}\r\n//           color={row.role === 'admin' ? 'primary' : 'default'}\r\n//           size=\"small\"\r\n//         />\r\n//       )\r\n//     },\r\n//     {\r\n//       id: 'created_at',\r\n//       label: 'Created At',\r\n//       render: (row) => new Date(row.created_at).toLocaleDateString()\r\n//     },\r\n//     {\r\n//       id: 'actions',\r\n//       label: 'Actions',\r\n//       render: (row) => (\r\n//         <Box sx={{ display: 'flex', gap: 1 }}>\r\n//           <Tooltip title=\"Edit\">\r\n//             <IconButton size=\"small\" onClick={() => handleEdit(row)}>\r\n//               <EditIcon />\r\n//             </IconButton>\r\n//           </Tooltip>\r\n//           <Tooltip title=\"Delete\">\r\n//             <IconButton size=\"small\" color=\"error\" onClick={() => handleDelete(row.id)}>\r\n//               <DeleteIcon />\r\n//             </IconButton>\r\n//           </Tooltip>\r\n//         </Box>\r\n//       ),\r\n//     },\r\n//   ];\r\n\r\n//   const filterOptions = [\r\n//     { id: 'role', label: 'Role', options: ['admin', 'user'] },\r\n//   ];\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, [filters, searchTerm]);\r\n\r\n//   const fetchUsers = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const response = await fetch('http://localhost:8082/user');\r\n//       if (!response.ok) throw new Error('Failed to fetch users');\r\n//       const data = await response.json();\r\n//       setUsers(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching users:', error);\r\n//       setUsers([]);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleAdd = () => {\r\n//     setSelectedUser(null);\r\n//     setOpenForm(true);\r\n//   };\r\n\r\n//   const handleEdit = (user) => {\r\n//     setSelectedUser(user);\r\n//     setOpenForm(true);\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (window.confirm('Are you sure you want to delete this user?')) {\r\n//       try {\r\n//         const response = await fetch(`http://localhost:8082/user/${id}`, {\r\n//           method: 'DELETE',\r\n//         });\r\n//         if (response.ok) {\r\n//           fetchUsers();\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Error deleting user:', error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (userData) => {\r\n//     try {\r\n//       const url = selectedUser \r\n//         ? `http://localhost:8082/user/${selectedUser.id}`\r\n//         : 'http://localhost:8082/user';\r\n      \r\n//       const response = await fetch(url, {\r\n//         method: selectedUser ? 'PUT' : 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(userData),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         setOpenForm(false);\r\n//         fetchUsers();\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error saving user:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Box sx={{ p: 3 }}>\r\n//       <PageHeader\r\n//         title=\"Users\"\r\n//         action={true}\r\n//         actionText=\"Add User\"\r\n//         actionIcon={<AddIcon />}\r\n//         onActionClick={handleAdd}\r\n//       />\r\n\r\n//       <Box sx={{ mb: 3 }}>\r\n//         <SearchBar\r\n//           onSearch={setSearchTerm}\r\n//           placeholder=\"Search users...\"\r\n//         />\r\n//         <FilterBar\r\n//           filters={filterOptions}\r\n//           activeFilters={filters}\r\n//           onFilterChange={(id, value) => setFilters({ ...filters, [id]: value })}\r\n//           onClearFilters={() => setFilters({})}\r\n//         />\r\n//       </Box>\r\n\r\n//       <DataTable\r\n//         columns={columns}\r\n//         data={users}\r\n//         loading={loading}\r\n//       />\r\n\r\n//       <UserForm\r\n//         open={openForm}\r\n//         user={selectedUser}\r\n//         onClose={() => setOpenForm(false)}\r\n//         onSubmit={handleSubmit}\r\n//       />\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Users;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}