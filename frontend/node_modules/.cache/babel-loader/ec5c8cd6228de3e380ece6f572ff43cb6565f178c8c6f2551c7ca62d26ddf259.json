{"ast":null,"code":"var _jsxFileName = \"/home/vishal/Vishal/Projects/src/github.com/crmapp/frontend/src/components/common/DataTable.js\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TablePagination, Box } from '@mui/material';\nimport NoData from './NoData';\nimport LoadingSpinner from './LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = ({\n  columns,\n  data,\n  loading = false,\n  page = 0,\n  rowsPerPage = 10,\n  totalCount = 0,\n  onPageChange,\n  onRowsPerPageChange,\n  noDataMessage = 'No data available'\n}) => {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(NoData, {\n      message: noDataMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align || 'left',\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: data.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            children: columns.map(column => {\n              const value = row[column.id];\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align || 'left',\n                children: column.render ? column.render(value, row) : value\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this);\n            })\n          }, row.id || index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), onPageChange && /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: totalCount,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: (event, newPage) => onPageChange(newPage),\n      onRowsPerPageChange: event => {\n        onRowsPerPageChange(parseInt(event.target.value, 10));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","Box","NoData","LoadingSpinner","jsxDEV","_jsxDEV","DataTable","columns","data","loading","page","rowsPerPage","totalCount","onPageChange","onRowsPerPageChange","noDataMessage","fileName","_jsxFileName","lineNumber","columnNumber","length","message","children","component","map","column","align","style","minWidth","label","id","row","index","hover","value","render","rowsPerPageOptions","count","event","newPage","parseInt","target","_c","$RefreshReg$"],"sources":["/home/vishal/Vishal/Projects/src/github.com/crmapp/frontend/src/components/common/DataTable.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TablePagination,\r\n  Box,\r\n} from '@mui/material';\r\nimport NoData from './NoData';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nconst DataTable = ({\r\n  columns,\r\n  data,\r\n  loading = false,\r\n  page = 0,\r\n  rowsPerPage = 10,\r\n  totalCount = 0,\r\n  onPageChange,\r\n  onRowsPerPageChange,\r\n  noDataMessage = 'No data available',\r\n}) => {\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (!data || data.length === 0) {\r\n    return <NoData message={noDataMessage} />;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align || 'left'}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row, index) => (\r\n              <TableRow hover key={row.id || index}>\r\n                {columns.map((column) => {\r\n                  const value = row[column.id];\r\n                  return (\r\n                    <TableCell key={column.id} align={column.align || 'left'}>\r\n                      {column.render ? column.render(value, row) : value}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      \r\n      {onPageChange && (\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={totalCount}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={(event, newPage) => onPageChange(newPage)}\r\n          onRowsPerPageChange={(event) => {\r\n            onRowsPerPageChange(parseInt(event.target.value, 10));\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DataTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}